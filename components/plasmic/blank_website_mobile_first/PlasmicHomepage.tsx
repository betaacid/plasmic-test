/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: i9knz7EXdrcBWswQTuKKjX
// Component: t6bbWH5XZ4fm

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import Button from "../../Button"; // plasmic-import: 7v6YGoE2Zo0o/component
import Modal from "../../Modal"; // plasmic-import: 5SZcaRjHDDZd/component
import Button2 from "../../Button2"; // plasmic-import: PVKK-xU6-q6G/component
import { FormWrapper } from "@plasmicpkgs/antd5/skinny/Form";
import { formHelpers as FormWrapper_Helpers } from "@plasmicpkgs/antd5/skinny/Form";
import { FormItemWrapper } from "@plasmicpkgs/antd5/skinny/FormItem";
import TextField from "../../TextField"; // plasmic-import: rdfZLaxRGh3N/component
import { AntdButton } from "@plasmicpkgs/antd5/skinny/registerButton";

import { useScreenVariants as useScreenVariantsajVfn3Ya69H5 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: AJVfn3Ya69h5/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: i9knz7EXdrcBWswQTuKKjX/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: t6bbWH5XZ4fm/css

import CircleIcon from "./icons/PlasmicIcon__Circle"; // plasmic-import: k4ujBvekGioO/icon
import MenuSvgIcon from "./icons/PlasmicIcon__MenuSvg"; // plasmic-import: m6be-c-hP_JG/icon
import ChevronDownIcon from "./icons/PlasmicIcon__ChevronDown"; // plasmic-import: H5Yxuv6_n5vq/icon
import EmailIconSvgIcon from "./icons/PlasmicIcon__EmailIconSvg"; // plasmic-import: zIXVq3DAAel6/icon
import CrownHaloIcon from "./icons/PlasmicIcon__CrownHalo"; // plasmic-import: QESqRHbH-Tr7/icon
import LineBreakIcon from "./icons/PlasmicIcon__LineBreak"; // plasmic-import: OaJD_NBb6Nrq/icon
import InstagramLogoIcon from "./icons/PlasmicIcon__InstagramLogo"; // plasmic-import: LCLxgt2Kqs7i/icon
import SpeechBubbleIcon from "./icons/PlasmicIcon__SpeechBubble"; // plasmic-import: s311iITGUFs6/icon
import ContactEmailIcon from "./icons/PlasmicIcon__ContactEmail"; // plasmic-import: u1EK1ushqS6H/icon
import CloseIconIcon from "./icons/PlasmicIcon__CloseIcon"; // plasmic-import: NxIUoog3Afja/icon

createPlasmicElementProxy;

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: Flex__<"div">;
  navSection?: Flex__<"section">;
  headerSection?: Flex__<"section">;
  h1?: Flex__<"h1">;
  aboutMeSection?: Flex__<"section">;
  portfolioSection?: Flex__<"section">;
  libertineBlendsProject?: Flex__<"div">;
  libertineCocktailBarProject?: Flex__<"div">;
  tiberiProject?: Flex__<"div">;
  whiskeriaProject?: Flex__<"div">;
  twoSchmukcs?: Flex__<"div">;
  creativeColabsProject?: Flex__<"div">;
  servicesSection?: Flex__<"section">;
  service1?: Flex__<"div">;
  rtdProductDevelopment?: Flex__<"div">;
  service2?: Flex__<"div">;
  rtdProductDevelopment2?: Flex__<"div">;
  service3?: Flex__<"div">;
  rtdProductDevelopment3?: Flex__<"div">;
  service4?: Flex__<"div">;
  rtdProductDevelopment4?: Flex__<"div">;
  photosSection?: Flex__<"section">;
  recognitionSection?: Flex__<"section">;
  columns?: Flex__<"div">;
  socialsSection?: Flex__<"section">;
  instagramPosts?: Flex__<"div">;
  post1?: Flex__<"div">;
  post2?: Flex__<"div">;
  post3?: Flex__<"div">;
  post4?: Flex__<"div">;
  testimonialsSection?: Flex__<"section">;
  _?: Flex__<"div">;
  footer?: Flex__<"section">;
  menuModal?: Flex__<typeof Modal>;
  links?: Flex__<"div">;
  formModal?: Flex__<typeof Modal>;
  reachOutAndLetsTalk?: Flex__<"div">;
  contactForm?: Flex__<typeof FormWrapper>;
  name?: Flex__<typeof FormItemWrapper>;
  textField?: Flex__<typeof TextField>;
  email?: Flex__<typeof FormItemWrapper>;
  emailInput?: Flex__<typeof TextField>;
  phone?: Flex__<typeof FormItemWrapper>;
  phoneField?: Flex__<typeof TextField>;
  message?: Flex__<typeof FormItemWrapper>;
  textField2?: Flex__<typeof TextField>;
  sendMessage?: Flex__<"div">;
};

export interface DefaultHomepageProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "menuModal.isOpen",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "formModal.isOpen",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "contactForm.value",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "contactForm",
        onMutate: generateOnMutateForSpec("value", FormWrapper_Helpers)
      },
      {
        path: "contactForm.isSubmitting",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false,

        refName: "contactForm",
        onMutate: generateOnMutateForSpec("isSubmitting", FormWrapper_Helpers)
      },
      {
        path: "textField.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "emailInput.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "phoneField.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "textField2.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsajVfn3Ya69H5()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            sty.root
          )}
        >
          <section
            data-plasmic-name={"navSection"}
            data-plasmic-override={overrides.navSection}
            className={classNames(projectcss.all, sty.navSection)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__elpz9)}>
              <Button
                className={classNames("__wab_instance", sty.button__kR0U)}
                label={
                  <React.Fragment>
                    <MenuSvgIcon
                      className={classNames(projectcss.all, sty.svg__sj8Mc)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___0VLey
                      )}
                    >
                      {"Menu"}
                    </div>
                  </React.Fragment>
                }
                onClick={async event => {
                  const $steps = {};

                  $steps["updateMenuModalIsOpen"] = true
                    ? (() => {
                        const actionArgs = {
                          variable: {
                            objRoot: $state,
                            variablePath: ["menuModal", "isOpen"]
                          },
                          operation: 0,
                          value: true
                        };
                        return (({
                          variable,
                          value,
                          startIndex,
                          deleteCount
                        }) => {
                          if (!variable) {
                            return;
                          }
                          const { objRoot, variablePath } = variable;

                          $stateSet(objRoot, variablePath, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateMenuModalIsOpen"] != null &&
                    typeof $steps["updateMenuModalIsOpen"] === "object" &&
                    typeof $steps["updateMenuModalIsOpen"].then === "function"
                  ) {
                    $steps["updateMenuModalIsOpen"] = await $steps[
                      "updateMenuModalIsOpen"
                    ];
                  }
                }}
              />

              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__mn83Y)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={
                  hasVariant(globalVariants, "screen", "desktopOnly")
                    ? "202px"
                    : "auto"
                }
                loading={"lazy"}
                src={{
                  src: "/plasmic/blank_website_mobile_first/images/logoPng.png",
                  fullWidth: 152,
                  fullHeight: 12,
                  aspectRatio: undefined
                }}
              />

              <Button
                className={classNames("__wab_instance", sty.button__fZIuf)}
                color={"neutral"}
                flatSide={[]}
                iconStart={
                  hasVariant(globalVariants, "screen", "desktopOnly")
                    ? undefined
                    : true
                }
                label={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__a8Syd
                    )}
                  >
                    {"Let's work together"}
                  </div>
                }
                onClick={async event => {
                  const $steps = {};

                  $steps["updateFormModalIsOpen"] = true
                    ? (() => {
                        const actionArgs = {
                          variable: {
                            objRoot: $state,
                            variablePath: ["formModal", "isOpen"]
                          },
                          operation: 0,
                          value: true
                        };
                        return (({
                          variable,
                          value,
                          startIndex,
                          deleteCount
                        }) => {
                          if (!variable) {
                            return;
                          }
                          const { objRoot, variablePath } = variable;

                          $stateSet(objRoot, variablePath, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateFormModalIsOpen"] != null &&
                    typeof $steps["updateFormModalIsOpen"] === "object" &&
                    typeof $steps["updateFormModalIsOpen"].then === "function"
                  ) {
                    $steps["updateFormModalIsOpen"] = await $steps[
                      "updateFormModalIsOpen"
                    ];
                  }
                }}
                roundedFull={true}
                start={
                  <EmailIconSvgIcon
                    className={classNames(projectcss.all, sty.svg__gieMo)}
                    role={"img"}
                  />
                }
              />
            </div>
          </section>
          <section
            data-plasmic-name={"headerSection"}
            data-plasmic-override={overrides.headerSection}
            className={classNames(projectcss.all, sty.headerSection)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__wrbg8)}
            >
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__okmBy)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={
                  hasVariant(globalVariants, "screen", "desktopOnly")
                    ? "152px"
                    : "82px"
                }
                loading={"lazy"}
                src={{
                  src: "/plasmic/blank_website_mobile_first/images/cocktailOnTable.png",
                  fullWidth: 304,
                  fullHeight: 214,
                  aspectRatio: undefined
                }}
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__r6Ms5
                )}
              >
                <React.Fragment>
                  <React.Fragment>{""}</React.Fragment>
                  {
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__s8CyR
                      )}
                    >
                      {"COCKTAIL"}
                    </h3>
                  }
                  <React.Fragment>{""}</React.Fragment>
                </React.Fragment>
              </div>
            </Stack__>
            <div className={classNames(projectcss.all, sty.freeBox__agGoN)}>
              <div className={classNames(projectcss.all, sty.freeBox__ewVxr)}>
                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3__yB37N
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    {
                      <h1
                        data-plasmic-name={"h1"}
                        data-plasmic-override={overrides.h1}
                        className={classNames(
                          projectcss.all,
                          projectcss.h1,
                          projectcss.__wab_text,
                          sty.h1
                        )}
                      >
                        {"KING"}
                      </h1>
                    }
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </h3>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__tpE3K)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___2YIc
                    )}
                  >
                    {"Global Beverage Consultant"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zm90M
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{"Expert in "}</React.Fragment>
                      {
                        <PlasmicLink__
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link___5Zlyj
                          )}
                          component={Link}
                          href={"https://test.com"}
                          platform={"nextjs"}
                        >
                          {"Ready-to-Drink Cocktails"}
                        </PlasmicLink__>
                      }
                      <React.Fragment>{", "}</React.Fragment>
                      {
                        <PlasmicLink__
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link__sARtq
                          )}
                          component={Link}
                          href={"https://test.com"}
                          platform={"nextjs"}
                        >
                          {"Bar Program Development"}
                        </PlasmicLink__>
                      }
                      <React.Fragment>{" & "}</React.Fragment>
                      {
                        <PlasmicLink__
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link___2Cn6U
                          )}
                          component={Link}
                          href={"https://test.com"}
                          platform={"nextjs"}
                        >
                          {"Menu Curation"}
                        </PlasmicLink__>
                      }
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </div>
                </Stack__>
                <Button
                  className={classNames("__wab_instance", sty.button__w0Xp)}
                  label={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dGq2T
                      )}
                    >
                      {"Let\u2019s work together"}
                    </div>
                  }
                />
              </div>
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__nIRsV)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={
                  hasVariant(globalVariants, "screen", "desktopOnly")
                    ? "398px"
                    : "239px"
                }
                loading={"lazy"}
                src={{
                  src: "/plasmic/blank_website_mobile_first/images/cocktailWithLemon.png",
                  fullWidth: 478,
                  fullHeight: 768,
                  aspectRatio: undefined
                }}
              />
            </div>
          </section>
          <section
            data-plasmic-name={"aboutMeSection"}
            data-plasmic-override={overrides.aboutMeSection}
            className={classNames(projectcss.all, sty.aboutMeSection)}
            id={"about-me"}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__ekNw6)}
            >
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img___3Ol6L)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"559px"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/blank_website_mobile_first/images/profilePic.png",
                  fullWidth: 1110,
                  fullHeight: 1466,
                  aspectRatio: undefined
                }}
              />

              <div className={classNames(projectcss.all, sty.freeBox___6VpK3)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__pAg8Q)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___1ApTq
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      {
                        <h4
                          className={classNames(
                            projectcss.all,
                            projectcss.h4,
                            projectcss.__wab_text,
                            sty.h4___3Hg24
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-vKYvxi3wkDsp)" }}
                            >
                              {"ABOUT ME."}
                            </span>
                          </React.Fragment>
                        </h4>
                      }
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </div>
                  <CrownHaloIcon
                    className={classNames(projectcss.all, sty.svg__nxJdj)}
                    role={"img"}
                  />
                </Stack__>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__fY8QO
                  )}
                >
                  {
                    "I'm an award-winning beverage consultant working globally to help brands, bars, and product developers bring their visions to life. My background spans cocktail development, production consulting, staff training, and menu design."
                  }
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___8ADKo
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    {
                      <ul
                        className={classNames(
                          projectcss.all,
                          projectcss.ul,
                          sty.ul___4Eiz8
                        )}
                      >
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__z2Cdn
                          )}
                        >
                          {"Ingredient-driven"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__yxGVr
                          )}
                        >
                          {"Technically precise\n"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__cdzBj
                          )}
                        >
                          {"Thoughtfully creative"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__d86Ak
                          )}
                        >
                          {"Comforting yet sophisticated"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li___7DTs6
                          )}
                        >
                          {
                            "Always clean and minimal in design and presentation"
                          }
                        </li>
                      </ul>
                    }
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__rj3O
                  )}
                >
                  {
                    "I've collaborated with companies ranging from boutique producers to large-scale manufacturers, always tailoring solutions that balance form, function, and flavor."
                  }
                </div>
              </div>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"portfolioSection"}
            data-plasmic-override={overrides.portfolioSection}
            className={classNames(projectcss.all, sty.portfolioSection)}
            id={"portfolio"}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__wfw4L
              )}
            >
              <React.Fragment>
                <React.Fragment>{""}</React.Fragment>
                {
                  <h6
                    className={classNames(
                      projectcss.all,
                      projectcss.h6,
                      projectcss.__wab_text,
                      sty.h6__tw7I5
                    )}
                  >
                    {"PORTFOLIO / RECENT"}
                  </h6>
                }
                <React.Fragment>{""}</React.Fragment>
              </React.Fragment>
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__gzkOn
              )}
            >
              <React.Fragment>
                <React.Fragment>{""}</React.Fragment>
                {
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__brndw
                    )}
                  >
                    {"PROJECTS"}
                  </h3>
                }
                <React.Fragment>{""}</React.Fragment>
              </React.Fragment>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__zcNq5)}>
              <div
                data-plasmic-name={"libertineBlendsProject"}
                data-plasmic-override={overrides.libertineBlendsProject}
                className={classNames(
                  projectcss.all,
                  sty.libertineBlendsProject
                )}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__nWh6E)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/blank_website_mobile_first/images/stackedCans.png",
                    fullWidth: 632,
                    fullHeight: 388,
                    aspectRatio: undefined
                  }}
                />

                <div className={classNames(projectcss.all, sty.freeBox__kBwyl)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cmr7P
                    )}
                  >
                    {"RTD Cocktail Development"}
                  </div>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__lSzin
                  )}
                >
                  {"Creative Collaborations"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__flAd
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    {
                      <ul
                        className={classNames(
                          projectcss.all,
                          projectcss.ul,
                          sty.ul__rOGr9
                        )}
                      >
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__hbZDo
                          )}
                        >
                          {"Concept Creation"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__qn6K1
                          )}
                        >
                          {"Recipe Creation"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__qYqzs
                          )}
                        >
                          {"Recipe Scaling"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__sFk6
                          )}
                        >
                          {"Production"}
                        </li>
                      </ul>
                    }
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </div>
              </div>
              <div
                data-plasmic-name={"libertineCocktailBarProject"}
                data-plasmic-override={overrides.libertineCocktailBarProject}
                className={classNames(
                  projectcss.all,
                  sty.libertineCocktailBarProject
                )}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__cd0Z0)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/blank_website_mobile_first/images/barAndTables.png",
                    fullWidth: 632,
                    fullHeight: 388,
                    aspectRatio: undefined
                  }}
                />

                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___8AWe)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xXDx0
                    )}
                  >
                    {"Bar Programs"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__j7X7F
                    )}
                  >
                    {"RTD Cocktail Development"}
                  </div>
                </Stack__>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___8ShBo
                  )}
                >
                  {"Libertine Cocktail Bar, Barcelona"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__jwi92
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    {
                      <ul
                        className={classNames(
                          projectcss.all,
                          projectcss.ul,
                          sty.ul__kqpDx
                        )}
                      >
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__rvxFh
                          )}
                        >
                          {"Bar concept creation"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__xh1T9
                          )}
                        >
                          {"Menu creation & curation"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__onuck
                          )}
                        >
                          {
                            "Draft, bottled, and canned cocktail program creation"
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li___59RLr
                          )}
                        >
                          {"Team training"}
                        </li>
                      </ul>
                    }
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </div>
              </div>
              <div
                data-plasmic-name={"tiberiProject"}
                data-plasmic-override={overrides.tiberiProject}
                className={classNames(projectcss.all, sty.tiberiProject)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__gsWX)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/blank_website_mobile_first/images/whiteBar.png",
                    fullWidth: 632,
                    fullHeight: 388,
                    aspectRatio: undefined
                  }}
                />

                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__ief9L)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__saGc1
                    )}
                  >
                    {"Bar Programs"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___4VU0T
                    )}
                  >
                    {"RTD Cocktail Development"}
                  </div>
                </Stack__>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__sgFWe
                  )}
                >
                  {"Tiberi, Barcelona"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__lPlHq
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    {
                      <ul
                        className={classNames(
                          projectcss.all,
                          projectcss.ul,
                          sty.ul__ghaym
                        )}
                      >
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__mgloE
                          )}
                        >
                          {"Draft cocktail program"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__zXhEw
                          )}
                        >
                          {"Sourcing of materials"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__t1KRh
                          )}
                        >
                          {"Installation oversight"}
                        </li>
                      </ul>
                    }
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </div>
              </div>
              <div
                data-plasmic-name={"whiskeriaProject"}
                data-plasmic-override={overrides.whiskeriaProject}
                className={classNames(projectcss.all, sty.whiskeriaProject)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__qCRw0)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/blank_website_mobile_first/images/darkBar.png",
                    fullWidth: 634,
                    fullHeight: 388,
                    aspectRatio: undefined
                  }}
                />

                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___6RlZy)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xy0XH
                    )}
                  >
                    {"Bar Programs"}
                  </div>
                </Stack__>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__mtSKl
                  )}
                >
                  {"La Whiskeria, Barcelona"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__tdQf
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    {
                      <ul
                        className={classNames(
                          projectcss.all,
                          projectcss.ul,
                          sty.ul__iJcOb
                        )}
                      >
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__mcRfm
                          )}
                        >
                          {"Cocktail menu development & curation"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__eBdc
                          )}
                        >
                          {"Standard operating procedure"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li___1Iwwe
                          )}
                        >
                          {"Team training"}
                        </li>
                      </ul>
                    }
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </div>
              </div>
              <div
                data-plasmic-name={"twoSchmukcs"}
                data-plasmic-override={overrides.twoSchmukcs}
                className={classNames(projectcss.all, sty.twoSchmukcs)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__oj81H)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/blank_website_mobile_first/images/stoneBar.png",
                    fullWidth: 632,
                    fullHeight: 388,
                    aspectRatio: undefined
                  }}
                />

                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__qdgKm)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__dwEa
                    )}
                  >
                    {"Bar Programs"}
                  </div>
                </Stack__>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__tNpZ1
                  )}
                >
                  {"Two Schmucks, Barcelona"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___4Re97
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    {
                      <ul
                        className={classNames(
                          projectcss.all,
                          projectcss.ul,
                          sty.ul__mqYv
                        )}
                      >
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__tzOMj
                          )}
                        >
                          {"Draft cocktail program"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li___76GMo
                          )}
                        >
                          {"Standard operating procedure"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__a67Tl
                          )}
                        >
                          {"Team training"}
                        </li>
                      </ul>
                    }
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </div>
              </div>
              <div
                data-plasmic-name={"creativeColabsProject"}
                data-plasmic-override={overrides.creativeColabsProject}
                className={classNames(
                  projectcss.all,
                  sty.creativeColabsProject
                )}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__eCpI0)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/blank_website_mobile_first/images/unstackedCans.png",
                    fullWidth: 632,
                    fullHeight: 388,
                    aspectRatio: undefined
                  }}
                />

                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__fbXj3)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___2C8BR
                    )}
                  >
                    {"RTD Cocktail Development"}
                  </div>
                </Stack__>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ot37W
                  )}
                >
                  {"Creative Collaborations"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___0GEbh
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    {
                      <ul
                        className={classNames(
                          projectcss.all,
                          projectcss.ul,
                          sty.ul___3Hz84
                        )}
                      >
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__ftRwZ
                          )}
                        >
                          {"Hotel Casa Bonay"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__aBeL1
                          )}
                        >
                          {"Asia's 50 Best Bars"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__kv4X
                          )}
                        >
                          {"Wozere Studio"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__xEj6W
                          )}
                        >
                          {"Michter's Whiskey"}
                        </li>
                      </ul>
                    }
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </div>
              </div>
            </div>
          </section>
          <section
            data-plasmic-name={"servicesSection"}
            data-plasmic-override={overrides.servicesSection}
            className={classNames(projectcss.all, sty.servicesSection)}
            id={"services"}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__mj14Y
              )}
            >
              <React.Fragment>
                <React.Fragment>{""}</React.Fragment>
                {
                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5___9FxNk
                    )}
                  >
                    {"Services"}
                  </h5>
                }
                <React.Fragment>{""}</React.Fragment>
              </React.Fragment>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__xPeC3)}>
              <div
                data-plasmic-name={"service1"}
                data-plasmic-override={overrides.service1}
                className={classNames(projectcss.all, sty.service1)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__h7OxU)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "desktopOnly")
                      ? "329px"
                      : "271px"
                  }
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/blank_website_mobile_first/images/rocksGlass.png",
                    fullWidth: 658,
                    fullHeight: 466,
                    aspectRatio: undefined
                  }}
                />

                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__dB1Oa)}
                >
                  <div
                    data-plasmic-name={"rtdProductDevelopment"}
                    data-plasmic-override={overrides.rtdProductDevelopment}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.rtdProductDevelopment
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      {
                        <h5
                          className={classNames(
                            projectcss.all,
                            projectcss.h5,
                            projectcss.__wab_text,
                            sty.h5___8Iewq
                          )}
                        >
                          {"RTD PRODUCT DEVELOPMENT"}
                        </h5>
                      }
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__g7CNt
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      {
                        <ul
                          className={classNames(
                            projectcss.all,
                            projectcss.ul,
                            sty.ul__fpw3Y
                          )}
                        >
                          <li
                            className={classNames(
                              projectcss.all,
                              projectcss.li,
                              projectcss.__wab_text,
                              sty.li__eeX4
                            )}
                          >
                            {"Concept ideation to full formulation"}
                          </li>
                          <li
                            className={classNames(
                              projectcss.all,
                              projectcss.li,
                              projectcss.__wab_text,
                              sty.li__wb3Ss
                            )}
                          >
                            {
                              "Ingredient sourcing, flavor development, and recipe creation"
                            }
                          </li>
                          <li
                            className={classNames(
                              projectcss.all,
                              projectcss.li,
                              projectcss.__wab_text,
                              sty.li__u0WTy
                            )}
                          >
                            {
                              "Scaling up from test kitchen to production facility"
                            }
                          </li>
                        </ul>
                      }
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </div>
                  <LineBreakIcon
                    className={classNames(projectcss.all, sty.svg__j2GYc)}
                    role={"img"}
                  />
                </Stack__>
              </div>
              <div
                data-plasmic-name={"service2"}
                data-plasmic-override={overrides.service2}
                className={classNames(projectcss.all, sty.service2)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__mCU7)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "desktopOnly")
                      ? "329px"
                      : "271px"
                  }
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/blank_website_mobile_first/images/barsAndTablesRound.png",
                    fullWidth: 657,
                    fullHeight: 466,
                    aspectRatio: undefined
                  }}
                />

                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__hn71T)}
                >
                  <div
                    data-plasmic-name={"rtdProductDevelopment2"}
                    data-plasmic-override={overrides.rtdProductDevelopment2}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.rtdProductDevelopment2
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      {
                        <h5
                          className={classNames(
                            projectcss.all,
                            projectcss.h5,
                            projectcss.__wab_text,
                            sty.h5___7KDF
                          )}
                        >
                          {"BAR PROGRAM CONSULTING"}
                        </h5>
                      }
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__j7OBc
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      {
                        <ul
                          className={classNames(
                            projectcss.all,
                            projectcss.ul,
                            sty.ul__d8Vjv
                          )}
                        >
                          <li
                            className={classNames(
                              projectcss.all,
                              projectcss.li,
                              projectcss.__wab_text,
                              sty.li__dqOu6
                            )}
                          >
                            {"Concept creation"}
                          </li>
                          <li
                            className={classNames(
                              projectcss.all,
                              projectcss.li,
                              projectcss.__wab_text,
                              sty.li__slm8A
                            )}
                          >
                            {"Menu development and costing"}
                          </li>
                          <li
                            className={classNames(
                              projectcss.all,
                              projectcss.li,
                              projectcss.__wab_text,
                              sty.li__sveei
                            )}
                          >
                            {"Signature drinks"}
                          </li>
                          <li
                            className={classNames(
                              projectcss.all,
                              projectcss.li,
                              projectcss.__wab_text,
                              sty.li___3DcUx
                            )}
                          >
                            {"Draft, bottled, and canned cocktail solutions"}
                          </li>
                          <li
                            className={classNames(
                              projectcss.all,
                              projectcss.li,
                              projectcss.__wab_text,
                              sty.li__f5Hsg
                            )}
                          >
                            {"Staff training"}
                          </li>
                          <li
                            className={classNames(
                              projectcss.all,
                              projectcss.li,
                              projectcss.__wab_text,
                              sty.li__nkhOj
                            )}
                          >
                            {"SOP creation and operational consulting"}
                          </li>
                        </ul>
                      }
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </div>
                  <LineBreakIcon
                    className={classNames(projectcss.all, sty.svg__lmffA)}
                    role={"img"}
                  />
                </Stack__>
              </div>
              <div
                data-plasmic-name={"service3"}
                data-plasmic-override={overrides.service3}
                className={classNames(projectcss.all, sty.service3)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__exN01)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "desktopOnly")
                      ? "329px"
                      : "271px"
                  }
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/blank_website_mobile_first/images/cocktailWithLeaves.png",
                    fullWidth: 658,
                    fullHeight: 466,
                    aspectRatio: undefined
                  }}
                />

                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___4Usfl)}
                >
                  <div
                    data-plasmic-name={"rtdProductDevelopment3"}
                    data-plasmic-override={overrides.rtdProductDevelopment3}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.rtdProductDevelopment3
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      {
                        <h5
                          className={classNames(
                            projectcss.all,
                            projectcss.h5,
                            projectcss.__wab_text,
                            sty.h5__unVvz
                          )}
                        >
                          {"MENU CREATION"}
                        </h5>
                      }
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__rmjsM
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      {
                        <ul
                          className={classNames(
                            projectcss.all,
                            projectcss.ul,
                            sty.ul__v107B
                          )}
                        >
                          <li
                            className={classNames(
                              projectcss.all,
                              projectcss.li,
                              projectcss.__wab_text,
                              sty.li__pyJsk
                            )}
                          >
                            {"Seasonal cocktail menus"}
                          </li>
                          <li
                            className={classNames(
                              projectcss.all,
                              projectcss.li,
                              projectcss.__wab_text,
                              sty.li__z3Y5T
                            )}
                          >
                            {"Signature drinks"}
                          </li>
                          <li
                            className={classNames(
                              projectcss.all,
                              projectcss.li,
                              projectcss.__wab_text,
                              sty.li__gv5K3
                            )}
                          >
                            {"Branded or collaboration menus"}
                          </li>
                        </ul>
                      }
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </div>
                  <LineBreakIcon
                    className={classNames(projectcss.all, sty.svg__tnB4I)}
                    role={"img"}
                  />
                </Stack__>
              </div>
              <div
                data-plasmic-name={"service4"}
                data-plasmic-override={overrides.service4}
                className={classNames(projectcss.all, sty.service4)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__uFqoz)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "desktopOnly")
                      ? "329px"
                      : "271px"
                  }
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/blank_website_mobile_first/images/bottles.png",
                    fullWidth: 658,
                    fullHeight: 466,
                    aspectRatio: undefined
                  }}
                />

                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__wBuCn)}
                >
                  <div
                    data-plasmic-name={"rtdProductDevelopment4"}
                    data-plasmic-override={overrides.rtdProductDevelopment4}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.rtdProductDevelopment4
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      {
                        <h5
                          className={classNames(
                            projectcss.all,
                            projectcss.h5,
                            projectcss.__wab_text,
                            sty.h5__zC0Z
                          )}
                        >
                          {"CREATIVE COLLABORATION"}
                        </h5>
                      }
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__eqc3E
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      {
                        <ul
                          className={classNames(
                            projectcss.all,
                            projectcss.ul,
                            sty.ul__eq7JU
                          )}
                        >
                          <li
                            className={classNames(
                              projectcss.all,
                              projectcss.li,
                              projectcss.__wab_text,
                              sty.li__qYn8B
                            )}
                          >
                            {"Brand activations and pop-ups\n"}
                          </li>
                          <li
                            className={classNames(
                              projectcss.all,
                              projectcss.li,
                              projectcss.__wab_text,
                              sty.li___2KhkC
                            )}
                          >
                            {"Customized cocktail creation"}
                          </li>
                          <li
                            className={classNames(
                              projectcss.all,
                              projectcss.li,
                              projectcss.__wab_text,
                              sty.li__ai435
                            )}
                          >
                            {"Private or immersive cocktail experiences"}
                          </li>
                        </ul>
                      }
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </div>
                </Stack__>
              </div>
            </div>
          </section>
          <section
            data-plasmic-name={"photosSection"}
            data-plasmic-override={overrides.photosSection}
            className={classNames(projectcss.all, sty.photosSection)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__qIdN)}
            >
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img___8IwMf)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={
                  hasVariant(globalVariants, "screen", "desktopOnly")
                    ? "auto"
                    : "310px"
                }
                loading={"lazy"}
                src={{
                  src: "/plasmic/blank_website_mobile_first/images/bowtie.png",
                  fullWidth: 598,
                  fullHeight: 818,
                  aspectRatio: undefined
                }}
              />

              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__s39VH)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={
                  hasVariant(globalVariants, "screen", "desktopOnly")
                    ? "auto"
                    : "199px"
                }
                loading={"lazy"}
                src={{
                  src: "/plasmic/blank_website_mobile_first/images/cocktailWithGrape.png",
                  fullWidth: 399,
                  fullHeight: 566,
                  aspectRatio: undefined
                }}
              />
            </Stack__>
          </section>
          <PlasmicImg__
            alt={""}
            className={classNames(sty.img__huMB)}
            displayHeight={
              hasVariant(globalVariants, "screen", "desktopOnly")
                ? "217px"
                : "126px"
            }
            displayMaxHeight={"none"}
            displayMaxWidth={"100%"}
            displayMinHeight={"0"}
            displayMinWidth={"0"}
            displayWidth={"100%"}
            loading={"lazy"}
            src={{
              src: "/plasmic/blank_website_mobile_first/images/pressBanner.png",
              fullWidth: 1536,
              fullHeight: 435,
              aspectRatio: undefined
            }}
          />

          <section
            data-plasmic-name={"recognitionSection"}
            data-plasmic-override={overrides.recognitionSection}
            className={classNames(projectcss.all, sty.recognitionSection)}
            id={"press"}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"columns"}
              data-plasmic-override={overrides.columns}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__ejBjz)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__e2RaM)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"56px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/blank_website_mobile_first/images/sfCompetitionAward.png",
                    fullWidth: 112,
                    fullHeight: 112,
                    aspectRatio: undefined
                  }}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__oKmD
                  )}
                >
                  {"San Francisco International Wine & Spirits Competition"}
                </div>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__xXeF)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/blank_website_mobile_first/images/sfCompetitionMedals.png",
                    fullWidth: 590,
                    fullHeight: 302,
                    aspectRatio: undefined
                  }}
                />
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__uw5Ah)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__a7XPn)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"122px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/blank_website_mobile_first/images/spiritAndBusinessLog0.png",
                    fullWidth: 244,
                    fullHeight: 92,
                    aspectRatio: undefined
                  }}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___9SQy4
                  )}
                >
                  {"The Spirits Business - Global Spirits Masters Competition"}
                </div>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___8MaXh)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/blank_website_mobile_first/images/spiritAndBusinessMedals.svg",
                    fullWidth: 295,
                    fullHeight: 77,
                    aspectRatio: undefined
                  }}
                />
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__nJiFo)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__h5L4N)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"240px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/blank_website_mobile_first/images/_50BestDiscoveryLogo.png",
                    fullWidth: 506,
                    fullHeight: 92,
                    aspectRatio: undefined
                  }}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__tJ8F2
                  )}
                >
                  {"Awarded Bar Programs"}
                </div>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__zywxc)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/blank_website_mobile_first/images/barAwards.png",
                    fullWidth: 566,
                    fullHeight: 550,
                    aspectRatio: undefined
                  }}
                />
              </Stack__>
            </Stack__>
            <div className={classNames(projectcss.all, sty.freeBox__sDPcf)} />
          </section>
          <section
            data-plasmic-name={"socialsSection"}
            data-plasmic-override={overrides.socialsSection}
            className={classNames(projectcss.all, sty.socialsSection)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___7BtnU)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___4OiPg
                )}
              >
                {"FOLLOW ME"}
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__gZOrv)}>
                <InstagramLogoIcon
                  className={classNames(projectcss.all, sty.svg__gqwjj)}
                  role={"img"}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__vTv0E
                  )}
                >
                  {"@cocktails__king"}
                </div>
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              data-plasmic-name={"instagramPosts"}
              data-plasmic-override={overrides.instagramPosts}
              hasGap={true}
              className={classNames(projectcss.all, sty.instagramPosts)}
            >
              <div
                data-plasmic-name={"post1"}
                data-plasmic-override={overrides.post1}
                className={classNames(projectcss.all, sty.post1)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__yQ7He)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/blank_website_mobile_first/images/ericHoldingBoxes.png",
                    fullWidth: 686,
                    fullHeight: 832,
                    aspectRatio: undefined
                  }}
                />

                <div className={classNames(projectcss.all, sty.freeBox__iai0U)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__a7MDt)}
                    displayHeight={"38px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"30px"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/blank_website_mobile_first/images/ericSocialProfilePic.png",
                      fullWidth: 60,
                      fullHeight: 76,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__kMhEf)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xtRh2
                      )}
                    >
                      {"cocktails__king"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__x8Gxi
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontStyle: "italic" }}
                        >
                          {"Eric Stephenson"}
                        </span>
                      </React.Fragment>
                    </div>
                  </div>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___8YiY
                  )}
                >
                  {
                    "MISSION ACCOMPLISHED\nLast July we set out to redefine the ready-to-drink category."
                  }
                </div>
              </div>
              <div
                data-plasmic-name={"post2"}
                data-plasmic-override={overrides.post2}
                className={classNames(projectcss.all, sty.post2)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__uv3Ha)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/blank_website_mobile_first/images/redCocktailWithGarnish.png",
                    fullWidth: 686,
                    fullHeight: 832,
                    aspectRatio: undefined
                  }}
                />

                <div className={classNames(projectcss.all, sty.freeBox__cvKQs)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__gYeOo)}
                    displayHeight={"38px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"30px"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/blank_website_mobile_first/images/ericSocialProfilePic.png",
                      fullWidth: 60,
                      fullHeight: 76,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__awQi9)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zG6Tm
                      )}
                    >
                      {"cocktails__king"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___8Ztww
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontStyle: "italic" }}
                        >
                          {"Eric Stephenson"}
                        </span>
                      </React.Fragment>
                    </div>
                  </div>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__rPx4P
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#000000" }}
                    >
                      {
                        "coconut oil armagnac blanche \u2022 mango \u2022 green szechuan aperitivo \u2022 citrus \u2022 carbonated"
                      }
                    </span>
                  </React.Fragment>
                </div>
              </div>
              <div
                data-plasmic-name={"post3"}
                data-plasmic-override={overrides.post3}
                className={classNames(projectcss.all, sty.post3)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__xWAc)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/blank_website_mobile_first/images/ericStandingWithDj.png",
                    fullWidth: 686,
                    fullHeight: 832,
                    aspectRatio: undefined
                  }}
                />

                <div className={classNames(projectcss.all, sty.freeBox__mxU1E)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img___3Qed5)}
                    displayHeight={"38px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"30px"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/blank_website_mobile_first/images/ericSocialProfilePic.png",
                      fullWidth: 60,
                      fullHeight: 76,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__ruFw0)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tckIr
                      )}
                    >
                      {"cocktails__king"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__uWwHp
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontStyle: "italic" }}
                        >
                          {"Eric Stephenson"}
                        </span>
                      </React.Fragment>
                    </div>
                  </div>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__nfVpS
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#000000" }}
                    >
                      {
                        "Still buzzing from last July's electrifying reunions with long-lost pals, sizzling encounters with fresh faces, intoxicating elixirs slung..."
                      }
                    </span>
                  </React.Fragment>
                </div>
              </div>
              <div
                data-plasmic-name={"post4"}
                data-plasmic-override={overrides.post4}
                className={classNames(projectcss.all, sty.post4)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__tmt1)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/blank_website_mobile_first/images/cocktailWithCloverStirrer.png",
                    fullWidth: 686,
                    fullHeight: 832,
                    aspectRatio: undefined
                  }}
                />

                <div className={classNames(projectcss.all, sty.freeBox__em7Sd)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img___2RgLi)}
                    displayHeight={"38px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"30px"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/blank_website_mobile_first/images/ericSocialProfilePic.png",
                      fullWidth: 60,
                      fullHeight: 76,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__uCkrH)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lHjEd
                      )}
                    >
                      {"cocktails__king"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___8FTub
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontStyle: "italic" }}
                        >
                          {"Eric Stephenson"}
                        </span>
                      </React.Fragment>
                    </div>
                  </div>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__rsYgr
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#000000" }}
                    >
                      {
                        "shiso vodka \u2022 yuzu \u2022 green apple \u2022 absinthe \u2022 citrus \u2022 carbonated"
                      }
                    </span>
                  </React.Fragment>
                </div>
              </div>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"testimonialsSection"}
            data-plasmic-override={overrides.testimonialsSection}
            className={classNames(projectcss.all, sty.testimonialsSection)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__bjSp3
              )}
            >
              {"\u201c"}
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__pfRk)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___67SKu
                )}
              >
                <React.Fragment>
                  <React.Fragment>{""}</React.Fragment>
                  {
                    <h4
                      className={classNames(
                        projectcss.all,
                        projectcss.h4,
                        projectcss.__wab_text,
                        sty.h4__fKuWl
                      )}
                    >
                      {"TESTIMONIALS"}
                    </h4>
                  }
                  <React.Fragment>{""}</React.Fragment>
                </React.Fragment>
              </div>
              <SpeechBubbleIcon
                className={classNames(projectcss.all, sty.svg__hlwiR)}
                role={"img"}
              />
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__rWKmW)}>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__wvh3C)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___0VSh
                  )}
                >
                  {
                    "Stephenson\u2019s passion for experimentation is evident in both his work ethic and the product; he spends hours poring over cookbooks, flavor bibles and classic cocktail recipes before tasting, balancing and perfecting new cocktails with his team."
                  }
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__osRz
                  )}
                >
                  {"LuxuryInsider.Co"}
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__jzbSc)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__dcLgb
                  )}
                >
                  {
                    "Libertine Blends is redefining the ready-to-drink (RTD) cocktail market, bringing sophistication and quality from behind the bar to a can in your hand."
                  }
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__dEbb
                  )}
                >
                  {"Travel & Lust"}
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__t05E1)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___2Gz5Y
                  )}
                >
                  {
                    "Globetrotting American bar consultant Eric Stephenson understands the way Barcelona\u2019s cosmopolitan cocktail community wants to drink"
                  }
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___4QWcm
                  )}
                >
                  {"World's 50 Best Bars"}
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__jkr16)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__bQ4Be
                  )}
                >
                  {
                    "Libertine Blends revolutionizes cocktails with stylish and flavorful ready-to-drink cocktails that combine sophistication, sustainability and taste to be enjoyed anywhere."
                  }
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__fveHv
                  )}
                >
                  {"BCN Fashion"}
                </div>
              </Stack__>
            </div>
            <div
              data-plasmic-name={"_"}
              data-plasmic-override={overrides._}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty._
              )}
            >
              {"\u201d"}
            </div>
          </section>
          <section
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames(projectcss.all, sty.footer)}
            id={"contact"}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__rSInS)}
            >
              <div className={classNames(projectcss.all, sty.freeBox___3Csml)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__yZqsf
                  )}
                >
                  {"Let's work together"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__l4TR0
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    {
                      <h6
                        className={classNames(
                          projectcss.all,
                          projectcss.h6,
                          projectcss.__wab_text,
                          sty.h6___0ZNhS
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "#FFFFFF" }}
                          >
                            {
                              "For project inquiries, collaboration proposals, or press\u2014"
                            }
                          </span>
                          <React.Fragment>{""}</React.Fragment>
                          {
                            <PlasmicLink__
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                projectcss.plasmic_default__inline,
                                sty.link__jaie
                              )}
                              component={Link}
                              href={""}
                              platform={"nextjs"}
                            >
                              <React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ color: "var(--token-18leZVsOXWhv)" }}
                                >
                                  {"reach out and let's talk"}
                                </span>
                              </React.Fragment>
                            </PlasmicLink__>
                          }
                          <React.Fragment>{""}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "var(--token-18leZVsOXWhv)" }}
                          >
                            {"."}
                          </span>
                        </React.Fragment>
                      </h6>
                    }
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__erSYd)}>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__e4CU7
                    )}
                    component={Link}
                    href={"https://www.instagram.com/cocktails__king/"}
                    platform={"nextjs"}
                  >
                    <InstagramLogoIcon
                      className={classNames(projectcss.all, sty.svg__o9Crh)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kaooQ
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "var(--token-00hQVsY5huLW)" }}
                        >
                          {"@cocktails__king"}
                        </span>
                      </React.Fragment>
                    </div>
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___7YtFz
                    )}
                    component={Link}
                    href={"mailto:hello@cocktailsking.com"}
                    platform={"nextjs"}
                  >
                    <ContactEmailIcon
                      className={classNames(projectcss.all, sty.svg__xwy4K)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___3FxJj
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "var(--token-00hQVsY5huLW)" }}
                        >
                          {"hello@cocktailsking.com"}
                        </span>
                      </React.Fragment>
                    </div>
                  </PlasmicLink__>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__eg7L4)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__adh4O)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "desktopOnly")
                      ? "151px"
                      : "auto"
                  }
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/blank_website_mobile_first/images/logo22.png",
                    fullWidth: 127,
                    fullHeight: 10,
                    aspectRatio: undefined
                  }}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___5LBSc
                  )}
                >
                  {"2025 Copyright"}
                </div>
              </div>
            </Stack__>
          </section>
          <Modal
            data-plasmic-name={"menuModal"}
            data-plasmic-override={overrides.menuModal}
            className={classNames("__wab_instance", sty.menuModal)}
            content={
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__wWlFd)}
              >
                <Button
                  className={classNames("__wab_instance", sty.button___4PzFs)}
                  label={
                    <React.Fragment>
                      <CloseIconIcon
                        className={classNames(projectcss.all, sty.svg__cPhon)}
                        role={"img"}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__z3Lpw
                        )}
                      >
                        {"Menu"}
                      </div>
                    </React.Fragment>
                  }
                  onClick={async event => {
                    const $steps = {};

                    $steps["updateMenuModalIsOpen"] = true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["menuModal", "isOpen"]
                            },
                            operation: 0,
                            value: false
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;

                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updateMenuModalIsOpen"] != null &&
                      typeof $steps["updateMenuModalIsOpen"] === "object" &&
                      typeof $steps["updateMenuModalIsOpen"].then === "function"
                    ) {
                      $steps["updateMenuModalIsOpen"] = await $steps[
                        "updateMenuModalIsOpen"
                      ];
                    }
                  }}
                />

                <Stack__
                  as={"div"}
                  data-plasmic-name={"links"}
                  data-plasmic-override={overrides.links}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.links)}
                >
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__gFi1F
                    )}
                    component={Link}
                    href={`/`}
                    onClick={async event => {
                      const $steps = {};

                      $steps["updateMenuModalIsOpen"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["menuModal", "isOpen"]
                              },
                              operation: 0,
                              value: false
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;

                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateMenuModalIsOpen"] != null &&
                        typeof $steps["updateMenuModalIsOpen"] === "object" &&
                        typeof $steps["updateMenuModalIsOpen"].then ===
                          "function"
                      ) {
                        $steps["updateMenuModalIsOpen"] = await $steps[
                          "updateMenuModalIsOpen"
                        ];
                      }
                    }}
                    platform={"nextjs"}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      {
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3___4M7DZ
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-OpsAqN-5bUxj)" }}
                            >
                              {"HOME"}
                            </span>
                          </React.Fragment>
                        </h3>
                      }
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link___4SJqw
                    )}
                    component={Link}
                    href={"#about-me"}
                    onClick={async event => {
                      const $steps = {};

                      $steps["updateMenuModalIsOpen"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["menuModal", "isOpen"]
                              },
                              operation: 0,
                              value: false
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;

                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateMenuModalIsOpen"] != null &&
                        typeof $steps["updateMenuModalIsOpen"] === "object" &&
                        typeof $steps["updateMenuModalIsOpen"].then ===
                          "function"
                      ) {
                        $steps["updateMenuModalIsOpen"] = await $steps[
                          "updateMenuModalIsOpen"
                        ];
                      }
                    }}
                    platform={"nextjs"}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      {
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__yFzxG
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-OpsAqN-5bUxj)" }}
                            >
                              {"ABOUT ME"}
                            </span>
                          </React.Fragment>
                        </h3>
                      }
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link___82ACw
                    )}
                    component={Link}
                    href={"#portfolio"}
                    onClick={async event => {
                      const $steps = {};

                      $steps["updateMenuModalIsOpen"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["menuModal", "isOpen"]
                              },
                              operation: 0,
                              value: false
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;

                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateMenuModalIsOpen"] != null &&
                        typeof $steps["updateMenuModalIsOpen"] === "object" &&
                        typeof $steps["updateMenuModalIsOpen"].then ===
                          "function"
                      ) {
                        $steps["updateMenuModalIsOpen"] = await $steps[
                          "updateMenuModalIsOpen"
                        ];
                      }
                    }}
                    platform={"nextjs"}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      {
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__s6A8D
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-OpsAqN-5bUxj)" }}
                            >
                              {"PORTFOLIO"}
                            </span>
                          </React.Fragment>
                        </h3>
                      }
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__oBvNi
                    )}
                    component={Link}
                    href={"#services"}
                    onClick={async event => {
                      const $steps = {};

                      $steps["updateMenuModalIsOpen"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["menuModal", "isOpen"]
                              },
                              operation: 0,
                              value: false
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;

                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateMenuModalIsOpen"] != null &&
                        typeof $steps["updateMenuModalIsOpen"] === "object" &&
                        typeof $steps["updateMenuModalIsOpen"].then ===
                          "function"
                      ) {
                        $steps["updateMenuModalIsOpen"] = await $steps[
                          "updateMenuModalIsOpen"
                        ];
                      }
                    }}
                    platform={"nextjs"}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      {
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__wpji
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-OpsAqN-5bUxj)" }}
                            >
                              {"SERVICES"}
                            </span>
                          </React.Fragment>
                        </h3>
                      }
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__ryfvV
                    )}
                    component={Link}
                    href={"#press"}
                    onClick={async event => {
                      const $steps = {};

                      $steps["updateMenuModalIsOpen"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["menuModal", "isOpen"]
                              },
                              operation: 0,
                              value: false
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;

                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateMenuModalIsOpen"] != null &&
                        typeof $steps["updateMenuModalIsOpen"] === "object" &&
                        typeof $steps["updateMenuModalIsOpen"].then ===
                          "function"
                      ) {
                        $steps["updateMenuModalIsOpen"] = await $steps[
                          "updateMenuModalIsOpen"
                        ];
                      }
                    }}
                    platform={"nextjs"}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      {
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__g9Rrx
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-OpsAqN-5bUxj)" }}
                            >
                              {"PRESS"}
                            </span>
                          </React.Fragment>
                        </h3>
                      }
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__sZXd
                    )}
                    component={Link}
                    href={"#contact"}
                    onClick={async event => {
                      const $steps = {};

                      $steps["updateMenuModalIsOpen"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["menuModal", "isOpen"]
                              },
                              operation: 0,
                              value: false
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;

                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateMenuModalIsOpen"] != null &&
                        typeof $steps["updateMenuModalIsOpen"] === "object" &&
                        typeof $steps["updateMenuModalIsOpen"].then ===
                          "function"
                      ) {
                        $steps["updateMenuModalIsOpen"] = await $steps[
                          "updateMenuModalIsOpen"
                        ];
                      }
                    }}
                    platform={"nextjs"}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      {
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__pTvn
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-OpsAqN-5bUxj)" }}
                            >
                              {"CONTACT"}
                            </span>
                          </React.Fragment>
                        </h3>
                      }
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </PlasmicLink__>
                </Stack__>
                <Stack__
                  as={PlasmicLink__}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__wmk5B
                  )}
                  component={Link}
                  href={"https://www.instagram.com/cocktails__king/"}
                  platform={"nextjs"}
                >
                  <InstagramLogoIcon
                    className={classNames(projectcss.all, sty.svg__lmMf2)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__l8ELi
                    )}
                  >
                    {"@cocktails__king"}
                  </div>
                </Stack__>
              </Stack__>
            }
            footer={null}
            heading={null}
            isOpen={generateStateValueProp($state, ["menuModal", "isOpen"])}
            noTrigger={true}
            onOpenChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["menuModal", "isOpen"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            showFooter={false}
            showHeader={false}
          />

          <Modal
            data-plasmic-name={"formModal"}
            data-plasmic-override={overrides.formModal}
            className={classNames("__wab_instance", sty.formModal)}
            content={
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__qNqSd)}
              >
                <Button
                  label={
                    <React.Fragment>
                      <CloseIconIcon
                        className={classNames(projectcss.all, sty.svg___2Gfn8)}
                        role={"img"}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__qDzXj
                        )}
                      >
                        {"Let's work together"}
                      </div>
                    </React.Fragment>
                  }
                  onClick={async event => {
                    const $steps = {};

                    $steps["updateFormModalIsOpen"] = true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["formModal", "isOpen"]
                            },
                            operation: 0,
                            value: false
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;

                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updateFormModalIsOpen"] != null &&
                      typeof $steps["updateFormModalIsOpen"] === "object" &&
                      typeof $steps["updateFormModalIsOpen"].then === "function"
                    ) {
                      $steps["updateFormModalIsOpen"] = await $steps[
                        "updateFormModalIsOpen"
                      ];
                    }
                  }}
                />

                <div
                  data-plasmic-name={"reachOutAndLetsTalk"}
                  data-plasmic-override={overrides.reachOutAndLetsTalk}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.reachOutAndLetsTalk
                  )}
                >
                  {"Reach out and let's talk"}
                </div>
                {(() => {
                  const child$Props = {
                    className: classNames("__wab_instance", sty.contactForm),
                    extendedOnValuesChange: async (...eventArgs: any) => {
                      generateStateOnChangePropForCodeComponents(
                        $state,
                        "value",
                        ["contactForm", "value"],
                        FormWrapper_Helpers
                      ).apply(null, eventArgs);
                    },
                    formItems: [
                      { label: "Name", name: "name", inputType: "Text" },
                      {
                        label: "Message",
                        name: "message",
                        inputType: "Text Area"
                      }
                    ],
                    labelCol: { span: 8, horizontalOnly: true },
                    layout: "vertical",
                    mode: "advanced",
                    onFinish: async values => {
                      const $steps = {};

                      $steps["runCode"] = true
                        ? (() => {
                            const actionArgs = {
                              customFunction: async () => {
                                return (async () => {
                                  return (() => {
                                    event.preventDefault();
                                    console.log("\u2705 We're in the from!");
                                    const payload = {
                                      ...$state.contactForm.value
                                    };
                                    console.log(
                                      "\uD83D\uDCE4 Form payload:",
                                      payload
                                    );
                                    fetch("https://formspree.io/f/xzzrnery", {
                                      method: "POST",
                                      headers: {
                                        "Content-Type": "application/json",
                                        Accept: "application/json"
                                      },
                                      body: JSON.stringify(payload)
                                    })
                                      .then(async res => {
                                        if (res.ok) {
                                          console.log(
                                            "\u2705 Email sent via Formspree!"
                                          );
                                          $state.formModal.isOpen = false;
                                          $state.contactForm.value = {
                                            name: "",
                                            email: "",
                                            phone: "",
                                            message: ""
                                          };
                                        } else {
                                          const err = await res
                                            .json()
                                            .catch(() => ({}));
                                          console.error(
                                            "\u274C Formspree error:",
                                            err
                                          );
                                          window.alert(
                                            "Sorry, something went wrong. Please try again."
                                          );
                                        }
                                      })
                                      .catch(err => {
                                        console.error(
                                          "\u274C Network error:",
                                          err
                                        );
                                        window.alert(
                                          "Network error \u2013 check your connection and try again."
                                        );
                                      });
                                  })();
                                })();
                              }
                            };
                            return (({ customFunction }) => {
                              return customFunction();
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["runCode"] != null &&
                        typeof $steps["runCode"] === "object" &&
                        typeof $steps["runCode"].then === "function"
                      ) {
                        $steps["runCode"] = await $steps["runCode"];
                      }
                    },
                    onIsSubmittingChange: async (...eventArgs: any) => {
                      generateStateOnChangePropForCodeComponents(
                        $state,
                        "isSubmitting",
                        ["contactForm", "isSubmitting"],
                        FormWrapper_Helpers
                      ).apply(null, eventArgs);
                    },
                    ref: ref => {
                      $refs["contactForm"] = ref;
                    },
                    requiredMark: false,
                    submitSlot: null,
                    wrapperCol: { span: 16, horizontalOnly: true }
                  };
                  initializeCodeComponentStates(
                    $state,
                    [
                      {
                        name: "value",
                        plasmicStateName: "contactForm.value"
                      },
                      {
                        name: "isSubmitting",
                        plasmicStateName: "contactForm.isSubmitting"
                      }
                    ],
                    [],
                    FormWrapper_Helpers ?? {},
                    child$Props
                  );

                  return (
                    <FormWrapper
                      data-plasmic-name={"contactForm"}
                      data-plasmic-override={overrides.contactForm}
                      {...child$Props}
                    >
                      <FormItemWrapper
                        data-plasmic-name={"name"}
                        data-plasmic-override={overrides.name}
                        className={classNames("__wab_instance", sty.name)}
                        label={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__jmsG9
                            )}
                          >
                            {"Name *"}
                          </div>
                        }
                        name={"name"}
                      >
                        <TextField
                          data-plasmic-name={"textField"}
                          data-plasmic-override={overrides.textField}
                          ariaLabel={"name"}
                          autoComplete={["name"]}
                          autoFocus={true}
                          className={classNames(
                            "__wab_instance",
                            sty.textField
                          )}
                          description={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__wuchQ
                              )}
                            >
                              {"Description..."}
                            </div>
                          }
                          inputMode={"text"}
                          label={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___3UwTd
                              )}
                            >
                              {"Label"}
                            </div>
                          }
                          onChange={async (...eventArgs: any) => {
                            generateStateOnChangeProp($state, [
                              "textField",
                              "value"
                            ]).apply(null, eventArgs);

                            if (
                              eventArgs.length > 1 &&
                              eventArgs[1] &&
                              eventArgs[1]._plasmic_state_init_
                            ) {
                              return;
                            }
                          }}
                          placeholder={"Enter your name"}
                          showLabel={false}
                          value={generateStateValueProp($state, [
                            "textField",
                            "value"
                          ])}
                        />
                      </FormItemWrapper>
                      <FormItemWrapper
                        data-plasmic-name={"email"}
                        data-plasmic-override={overrides.email}
                        className={classNames("__wab_instance", sty.email)}
                        label={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__u8LCk
                            )}
                          >
                            {"Email *"}
                          </div>
                        }
                        name={"email"}
                      >
                        <TextField
                          data-plasmic-name={"emailInput"}
                          data-plasmic-override={overrides.emailInput}
                          ariaLabel={"email"}
                          autoComplete={["email"]}
                          className={classNames(
                            "__wab_instance",
                            sty.emailInput
                          )}
                          inputMode={"email"}
                          onChange={async (...eventArgs: any) => {
                            generateStateOnChangeProp($state, [
                              "emailInput",
                              "value"
                            ]).apply(null, eventArgs);

                            if (
                              eventArgs.length > 1 &&
                              eventArgs[1] &&
                              eventArgs[1]._plasmic_state_init_
                            ) {
                              return;
                            }
                          }}
                          placeholder={"Enter your email"}
                          showLabel={false}
                          type={"email"}
                          value={generateStateValueProp($state, [
                            "emailInput",
                            "value"
                          ])}
                        />
                      </FormItemWrapper>
                      <FormItemWrapper
                        data-plasmic-name={"phone"}
                        data-plasmic-override={overrides.phone}
                        className={classNames("__wab_instance", sty.phone)}
                        label={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__lN9Dc
                            )}
                          >
                            {"Phone *"}
                          </div>
                        }
                        name={"phone"}
                      >
                        <TextField
                          data-plasmic-name={"phoneField"}
                          data-plasmic-override={overrides.phoneField}
                          ariaLabel={"phone"}
                          autoComplete={["tel"]}
                          className={classNames(
                            "__wab_instance",
                            sty.phoneField
                          )}
                          inputMode={"tel"}
                          onChange={async (...eventArgs: any) => {
                            generateStateOnChangeProp($state, [
                              "phoneField",
                              "value"
                            ]).apply(null, eventArgs);

                            if (
                              eventArgs.length > 1 &&
                              eventArgs[1] &&
                              eventArgs[1]._plasmic_state_init_
                            ) {
                              return;
                            }
                          }}
                          placeholder={"Enter your phone number"}
                          showLabel={false}
                          type={"tel"}
                          value={generateStateValueProp($state, [
                            "phoneField",
                            "value"
                          ])}
                        />
                      </FormItemWrapper>
                      <FormItemWrapper
                        data-plasmic-name={"message"}
                        data-plasmic-override={overrides.message}
                        className={classNames("__wab_instance", sty.message)}
                        label={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ahdYh
                            )}
                          >
                            {"Message *"}
                          </div>
                        }
                        name={"message"}
                      >
                        <TextField
                          data-plasmic-name={"textField2"}
                          data-plasmic-override={overrides.textField2}
                          ariaLabel={"message-label"}
                          className={classNames(
                            "__wab_instance",
                            sty.textField2
                          )}
                          inputMode={"text"}
                          multiLine={true}
                          onChange={async (...eventArgs: any) => {
                            generateStateOnChangeProp($state, [
                              "textField2",
                              "value"
                            ]).apply(null, eventArgs);

                            if (
                              eventArgs.length > 1 &&
                              eventArgs[1] &&
                              eventArgs[1]._plasmic_state_init_
                            ) {
                              return;
                            }
                          }}
                          placeholder={"Enter your message"}
                          showLabel={false}
                          value={generateStateValueProp($state, [
                            "textField2",
                            "value"
                          ])}
                        />
                      </FormItemWrapper>
                      <AntdButton
                        className={classNames(
                          "__wab_instance",
                          sty.button__ez9QO
                        )}
                        shape={"round"}
                        size={"large"}
                        submitsForm={true}
                        type={"primary"}
                      >
                        <div
                          data-plasmic-name={"sendMessage"}
                          data-plasmic-override={overrides.sendMessage}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.sendMessage
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "var(--token-PMhoKm26_7pT)" }}
                            >
                              {"Send Message"}
                            </span>
                          </React.Fragment>
                        </div>
                      </AntdButton>
                    </FormWrapper>
                  );
                })()}
              </Stack__>
            }
            footer={null}
            heading={null}
            isOpen={generateStateValueProp($state, ["formModal", "isOpen"])}
            noTrigger={true}
            onOpenChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["formModal", "isOpen"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            showFooter={false}
            showHeader={false}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navSection",
    "headerSection",
    "h1",
    "aboutMeSection",
    "portfolioSection",
    "libertineBlendsProject",
    "libertineCocktailBarProject",
    "tiberiProject",
    "whiskeriaProject",
    "twoSchmukcs",
    "creativeColabsProject",
    "servicesSection",
    "service1",
    "rtdProductDevelopment",
    "service2",
    "rtdProductDevelopment2",
    "service3",
    "rtdProductDevelopment3",
    "service4",
    "rtdProductDevelopment4",
    "photosSection",
    "recognitionSection",
    "columns",
    "socialsSection",
    "instagramPosts",
    "post1",
    "post2",
    "post3",
    "post4",
    "testimonialsSection",
    "_",
    "footer",
    "menuModal",
    "links",
    "formModal",
    "reachOutAndLetsTalk",
    "contactForm",
    "name",
    "textField",
    "email",
    "emailInput",
    "phone",
    "phoneField",
    "message",
    "textField2",
    "sendMessage"
  ],
  navSection: ["navSection"],
  headerSection: ["headerSection", "h1"],
  h1: ["h1"],
  aboutMeSection: ["aboutMeSection"],
  portfolioSection: [
    "portfolioSection",
    "libertineBlendsProject",
    "libertineCocktailBarProject",
    "tiberiProject",
    "whiskeriaProject",
    "twoSchmukcs",
    "creativeColabsProject"
  ],
  libertineBlendsProject: ["libertineBlendsProject"],
  libertineCocktailBarProject: ["libertineCocktailBarProject"],
  tiberiProject: ["tiberiProject"],
  whiskeriaProject: ["whiskeriaProject"],
  twoSchmukcs: ["twoSchmukcs"],
  creativeColabsProject: ["creativeColabsProject"],
  servicesSection: [
    "servicesSection",
    "service1",
    "rtdProductDevelopment",
    "service2",
    "rtdProductDevelopment2",
    "service3",
    "rtdProductDevelopment3",
    "service4",
    "rtdProductDevelopment4"
  ],
  service1: ["service1", "rtdProductDevelopment"],
  rtdProductDevelopment: ["rtdProductDevelopment"],
  service2: ["service2", "rtdProductDevelopment2"],
  rtdProductDevelopment2: ["rtdProductDevelopment2"],
  service3: ["service3", "rtdProductDevelopment3"],
  rtdProductDevelopment3: ["rtdProductDevelopment3"],
  service4: ["service4", "rtdProductDevelopment4"],
  rtdProductDevelopment4: ["rtdProductDevelopment4"],
  photosSection: ["photosSection"],
  recognitionSection: ["recognitionSection", "columns"],
  columns: ["columns"],
  socialsSection: [
    "socialsSection",
    "instagramPosts",
    "post1",
    "post2",
    "post3",
    "post4"
  ],
  instagramPosts: ["instagramPosts", "post1", "post2", "post3", "post4"],
  post1: ["post1"],
  post2: ["post2"],
  post3: ["post3"],
  post4: ["post4"],
  testimonialsSection: ["testimonialsSection", "_"],
  _: ["_"],
  footer: ["footer"],
  menuModal: ["menuModal", "links"],
  links: ["links"],
  formModal: [
    "formModal",
    "reachOutAndLetsTalk",
    "contactForm",
    "name",
    "textField",
    "email",
    "emailInput",
    "phone",
    "phoneField",
    "message",
    "textField2",
    "sendMessage"
  ],
  reachOutAndLetsTalk: ["reachOutAndLetsTalk"],
  contactForm: [
    "contactForm",
    "name",
    "textField",
    "email",
    "emailInput",
    "phone",
    "phoneField",
    "message",
    "textField2",
    "sendMessage"
  ],
  name: ["name", "textField"],
  textField: ["textField"],
  email: ["email", "emailInput"],
  emailInput: ["emailInput"],
  phone: ["phone", "phoneField"],
  phoneField: ["phoneField"],
  message: ["message", "textField2"],
  textField2: ["textField2"],
  sendMessage: ["sendMessage"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  navSection: "section";
  headerSection: "section";
  h1: "h1";
  aboutMeSection: "section";
  portfolioSection: "section";
  libertineBlendsProject: "div";
  libertineCocktailBarProject: "div";
  tiberiProject: "div";
  whiskeriaProject: "div";
  twoSchmukcs: "div";
  creativeColabsProject: "div";
  servicesSection: "section";
  service1: "div";
  rtdProductDevelopment: "div";
  service2: "div";
  rtdProductDevelopment2: "div";
  service3: "div";
  rtdProductDevelopment3: "div";
  service4: "div";
  rtdProductDevelopment4: "div";
  photosSection: "section";
  recognitionSection: "section";
  columns: "div";
  socialsSection: "section";
  instagramPosts: "div";
  post1: "div";
  post2: "div";
  post3: "div";
  post4: "div";
  testimonialsSection: "section";
  _: "div";
  footer: "section";
  menuModal: typeof Modal;
  links: "div";
  formModal: typeof Modal;
  reachOutAndLetsTalk: "div";
  contactForm: typeof FormWrapper;
  name: typeof FormItemWrapper;
  textField: typeof TextField;
  email: typeof FormItemWrapper;
  emailInput: typeof TextField;
  phone: typeof FormItemWrapper;
  phoneField: typeof TextField;
  message: typeof FormItemWrapper;
  textField2: typeof TextField;
  sendMessage: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHomepage__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navSection: makeNodeComponent("navSection"),
    headerSection: makeNodeComponent("headerSection"),
    h1: makeNodeComponent("h1"),
    aboutMeSection: makeNodeComponent("aboutMeSection"),
    portfolioSection: makeNodeComponent("portfolioSection"),
    libertineBlendsProject: makeNodeComponent("libertineBlendsProject"),
    libertineCocktailBarProject: makeNodeComponent(
      "libertineCocktailBarProject"
    ),
    tiberiProject: makeNodeComponent("tiberiProject"),
    whiskeriaProject: makeNodeComponent("whiskeriaProject"),
    twoSchmukcs: makeNodeComponent("twoSchmukcs"),
    creativeColabsProject: makeNodeComponent("creativeColabsProject"),
    servicesSection: makeNodeComponent("servicesSection"),
    service1: makeNodeComponent("service1"),
    rtdProductDevelopment: makeNodeComponent("rtdProductDevelopment"),
    service2: makeNodeComponent("service2"),
    rtdProductDevelopment2: makeNodeComponent("rtdProductDevelopment2"),
    service3: makeNodeComponent("service3"),
    rtdProductDevelopment3: makeNodeComponent("rtdProductDevelopment3"),
    service4: makeNodeComponent("service4"),
    rtdProductDevelopment4: makeNodeComponent("rtdProductDevelopment4"),
    photosSection: makeNodeComponent("photosSection"),
    recognitionSection: makeNodeComponent("recognitionSection"),
    columns: makeNodeComponent("columns"),
    socialsSection: makeNodeComponent("socialsSection"),
    instagramPosts: makeNodeComponent("instagramPosts"),
    post1: makeNodeComponent("post1"),
    post2: makeNodeComponent("post2"),
    post3: makeNodeComponent("post3"),
    post4: makeNodeComponent("post4"),
    testimonialsSection: makeNodeComponent("testimonialsSection"),
    _: makeNodeComponent("_"),
    footer: makeNodeComponent("footer"),
    menuModal: makeNodeComponent("menuModal"),
    links: makeNodeComponent("links"),
    formModal: makeNodeComponent("formModal"),
    reachOutAndLetsTalk: makeNodeComponent("reachOutAndLetsTalk"),
    contactForm: makeNodeComponent("contactForm"),
    _name: makeNodeComponent("name"),
    textField: makeNodeComponent("textField"),
    email: makeNodeComponent("email"),
    emailInput: makeNodeComponent("emailInput"),
    phone: makeNodeComponent("phone"),
    phoneField: makeNodeComponent("phoneField"),
    message: makeNodeComponent("message"),
    textField2: makeNodeComponent("textField2"),
    sendMessage: makeNodeComponent("sendMessage"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
